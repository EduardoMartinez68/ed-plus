{{#each branchFree}}
<form action="/fud/{{id_companies}}/{{id}}/add-product-free" method="post">
    <input type="hidden" value="{{id}}" name="id_branch">
    {{/each}}

    {{>free/combo/form}}


    <!--this is for data of the supplies-->
    <div class="form-group">
        <div class="form-check" name="">
            <input class="form-check-input" type="checkbox" id="invalidCheck2" name="inventory">
            <label class="form-check-label" for="invalidCheck2">
                Usar inventario
            </label>
        </div>
    </div>

    <div class="row">
        <hr>
        <label for="">Informacion de Venta</label>
        <br><br>
        <div class="content_box">

            <div class="content-sales active">
                <div class="row">
                    <div class="col">
                        <label>Monto de Compra *</label><br>
                        <input type="tex" class="form-control" name="purchase_amount" placeholder="Monto de Compra"
                            autofocus required value="{{purchase_amount}}">
                    </div>
                    <div class="col">
                        <label>Unidad de Compra</label>
                        <select value="{{purchase_unity}}" name="purchase_unity" class="form-select">
                            {{>unity/unitOfMeasure}}
                        </select>
                    </div>
                    <div class="col">
                        <label>Precio de Compra *</label><br>
                        <input type="tex" class="form-control" name="purchase_price" placeholder="Precio de Compra"
                            required value="{{purchase_price}}">
                    </div>
                    <div class="col">
                        <label>Moneda de compra</label>
                        <select value="{{currency_purchase}}" name="currency_purchase" class="form-select">
                            {{>unity/unitOfMoney}}
                        </select>
                    </div>
                </div>
                <br>

                <div class="row">
                    <div class="col">
                        <label>Monto de Venta *</label><br>
                        <input type="tex" class="form-control" name="sale_amount" placeholder="Monto de Venta" required
                            value="{{purchase_price}}" value="1">
                    </div>
                    <div class="col">
                        <label>Unidad de Venta</label>
                        <select value="{{sale_unity}}" name="sale_unity" class="form-select">
                            {{>unity/unitOfMeasure}}
                        </select>
                    </div>
                    <div class="col">
                        <label>Precio de Venta</label><br>
                        <input type="tex" class="form-control" name="sale_price" placeholder="Precio de Venta" required
                            value="{{sale_price}}" id="sale_price">
                    </div>
                    <div class="col">
                        <label>Moneda de uso</label>
                        <select value="{{currency_sale}}" name="currency_sale" class="form-select">
                            {{>unity/unitOfMoney}}
                        </select>
                    </div>
                </div>
                <br>
                <div class="row">
                    <div class="col">
                        <label>Inventario MÃ¡ximo</label><br>
                        <input type="tex" class="form-control" name="max_inventory" placeholder="Inventario MÃ¡ximo"
                            value="{{max_inventary}}">
                    </div>
                    <div class="col">
                        <label>Inventario MÃ­nimo</label><br>
                        <input type="tex" class="form-control" name="minimum_inventory" placeholder="Inventario MÃ­nimo"
                            value="{{minimum_inventory}}">
                    </div>
                    <div class="col">
                        <label>Unidad de Medida *</label><br>
                        <select value="{{unit_inventory}}" name="unit_inventory" class="form-select">
                            {{>unity/unitOfMeasure}}
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label>Existencia</label><br>
                        <input type="tex" class="form-control" name="existence" placeholder="Existencia" required
                            value="{{existence}}">
                    </div>
                </div>
            </div>
            <br>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <!--
            <div class="col-10">
                <button class="btn btn-success ms-auto" type="button" onclick="create_new_product_flash()">Guardado Rapido</button>
            </div>
            -->
            <div class="col">
                <div class="d-flex">
                    <button type="submit" class="btn btn-edit ms-auto" id="btn-send"
                        onclick="saveProduct()">Siguiente</button>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    async function create_new_product_flash(){
        const loadingOverlay = document.getElementById("loadingOverlay");

        //if in our api not exist this product, we will search in the API free
        try {
            loadingOverlay.style.display = "flex";
            const data = {
                barcode: document.getElementById("productBarcodePop").value,
                name: document.getElementById("productNamePop").value,
                sale_price: document.getElementById("productPricePop").value,
                description: document.getElementById("productDescriptionPop").value,
                idBranch: document.querySelector('input[name="idBranch"]').value,

                purchase_amount: document.querySelector('input[name="purchase_amount"]').value,
                purchase_unity: document.querySelector('select[name="purchase_unity"]').value,
                purchase_price: document.querySelector('input[name="purchase_price"]').value,
                currency_purchase: document.querySelector('select[name="currency_purchase"]').value,

                sale_amount: document.querySelector('input[name="sale_amount"]').value,
                sale_unity: document.querySelector('select[name="sale_unity"]').value,
                currency_sale: document.querySelector('select[name="currency_sale"]').value,

                max_inventory: document.querySelector('input[name="max_inventory"]').value,
                minimum_inventory: document.querySelector('input[name="minimum_inventory"]').value,
                unit_inventory: document.querySelector('select[name="unit_inventory"]').value,

                existence: document.querySelector('input[name="existence"]').value,
                inventory: document.querySelector('input[name="inventory"]').checked
            };

            // LLAMADA A TU BACKEND LOCAL
            const response = await fetch(`/links/add_new_product_with_flask`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            const result = await response.json();
            
            if (result.code) {
                notificationMessage(data.name+" agregado", result.message);
                selectedProductData={}
            } else {
                errorMessage("El producto '"+data.name+"' no se pudo agregar", result.message);
            }

        } catch (error) {
            console.error("ðŸ’¥ Error al crear producto Flash:", error);
            errorMessage("ðŸ’¥ Error al crear producto Flash:", error);
        } finally {
            loadingOverlay.style.display = "none";
        }    
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const inventoryToggle = document.getElementById('invalidCheck2');
        const formSection = document.querySelector('.content-sales');

        // Encuentra todos los inputs y selects dentro de la secciÃ³n
        const inputs = formSection.querySelectorAll('input');
        const selects = formSection.querySelectorAll('select');

        function toggleInventorySection(enabled) {
            inputs.forEach(input => {
                if (input.type === 'text' || input.type === 'number') {
                    input.readOnly = !enabled;
                    if (!enabled) input.value = '1';
                } else {
                    input.disabled = !enabled;
                }
            });

            selects.forEach(select => {
                select.disabled = !enabled;
                if (!enabled) {
                    select.selectedIndex = 0; // Reinicia al primer option
                }
            });
        }

        // Inicializar
        toggleInventorySection(inventoryToggle.checked);

        // Escuchar cambios en el checkbox
        inventoryToggle.addEventListener('change', () => {
            toggleInventorySection(inventoryToggle.checked);
        });
    });
</script>