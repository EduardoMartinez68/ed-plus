<!--
    {ED} Software Developer

    This software is the exclusive property of {ED} Software Developer.
    Any form of unauthorized reproduction, distribution or use of this technology without the express consent of the copyright holder is strictly prohibited.
    All rights reserved 2025.
    Improper use of this software will be punished under applicable laws.
-->
<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="icon" href="/img/logo.png" type="image/png">
    <title>ED PLUS</title>

    <!--font-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/3.0.0/uicons-bold-rounded/css/uicons-bold-rounded.css'>
    <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-regular-rounded/css/uicons-regular-rounded.css">

    <link href='/css/ultimate/main.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="/css/Styles.css">

    <!--select-->
    <link href="https://cdn.jsdelivr.net/npm/chosen-js@1.8.7/dist/css/chosen.min.css" rel="stylesheet" />
</head>

<body>
    {{>load}}
    {{#if user}}
    {{>titleBar}}
    {{{body}}}
    {{else}}
    {{{body}}}
    {{/if}}
    {{>message}}

    <!--select search Enlaces CDN para jQuery y Select2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/chosen-js@1.8.7/dist/chosen.jquery.min.js" defer></script>
    <script src="/js/store/other.js" defer></script>
    <script src="/js/ultimate/main.min.js" defer></script>
    <script src="/js/messagePop.js" defer></script>
    <script src="/js/tutorial.js" defer></script>
    <script>
        function open_my_pop(id) {
            const el = document.getElementById(id);
            if (el) el.style.display = 'flex';
        }

        function close_my_pop(id) {
            const el = document.getElementById(id);
            if (el) el.style.display = 'none';
        }
        function watch_most(sectionId) {
            const section = document.getElementById(sectionId);
            const icon = document.getElementById(`icon-${sectionId}`);

            section.classList.toggle('expanded');
            section.classList.toggle('collapsed');
            //icon.classList.toggle('rotated');
        }
    </script>
    <script>
        async function send_data_to_server(url, data, load = true) {
            //her we will see if exist the bar load and if the user would like activate the load bar
            const loadingOverlay = document.getElementById('loadingOverlay');
            if (loadingOverlay && load) {
                //if exist the load bar, we will activate the load
                loadingOverlay.style.display = 'flex';
            }


            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                // Verificamos si la respuesta fue exitosa
                if (!response.ok) {
                    throw new Error(`Error ${response.status}: ${response.statusText}`);
                }

                // Convertimos la respuesta en JSON
                const result = await response.json();
                return result;

            } catch (error) {
                console.error('Error al enviar los datos al servidor:', error);
                return { success: false, error: error.message };
            } finally {
                //if exist the load bar, and the user the activate, we will off the bar 
                if (loadingOverlay && load) {
                    loadingOverlay.style.display = 'none';
                }
            }
        }

        async function send_data_to_my_api_in_the_server(url, data, load = true) {
            //her we will see if exist the bar load and if the user would like activate the load bar
            const loadingOverlay = document.getElementById('loadingOverlay');
            if (loadingOverlay && load) {
                //if exist the load bar, we will activate the load
                loadingOverlay.style.display = 'flex';
            }


            try {
                const response = await fetch(url, {
                    method: 'POST',
                    body: data
                });

                // Verificamos si la respuesta fue exitosa
                if (!response.ok) {
                    throw new Error(`Error ${response.status}: ${response.statusText}`);
                }

                // Convertimos la respuesta en JSON
                const result = await response.json();
                return result;

            } catch (error) {
                console.error('Error al enviar los datos al servidor:', error);
                return { success: false, error: error.message };
            } finally {
                //if exist the load bar, and the user the activate, we will off the bar 
                if (loadingOverlay && load) {
                    loadingOverlay.style.display = 'none';
                }
            }
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const tooltip = document.createElement("div");
            tooltip.className = "erp-tooltip";
            document.body.appendChild(tooltip);

            document.querySelectorAll("info-label").forEach(el => {
                const labelText = el.getAttribute("label") || "";
                const message = el.getAttribute("message") || "";

                const label = document.createElement("label");
                label.classList.add("info-label-generated");

                const span = document.createElement("span");
                span.textContent = labelText;

                const icon = document.createElement("i");
                icon.className = "fi fi-sr-interrogation";

                // Tooltip sobre el Ã­cono
                icon.addEventListener("mouseenter", () => {
                    tooltip.textContent = message;
                    tooltip.style.opacity = "1";
                });
                icon.addEventListener("mousemove", (e) => {
                    tooltip.style.left = (e.pageX + 15) + "px";
                    tooltip.style.top = (e.pageY - 30) + "px";
                });
                icon.addEventListener("mouseleave", () => {
                    tooltip.style.opacity = "0";
                });

                label.appendChild(span);
                label.appendChild(icon);
                el.replaceWith(label);
            });
        });
    </script>
</body>

</html>