<style>
.card-info-fiscal {
  width: 100%;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 6px 18px rgba(0 ,0, 0,.08);
  padding: 0.8rem 2rem;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: #2c3e50;

  max-height: 400px; /* Ajusta según tu diseño */
  overflow-y: auto;
  padding-right: 5px; /* Espacio para scrollbar */
}


.info-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.65rem 0;
  border-bottom: 1px solid #e0e0e0;
}

.info-row:last-child {
  border-bottom: none;
}

.info-label {
  font-weight: 600;
  font-size: 0.8rem;
  flex: 1 1 40%;
  color: #34495e;
}

.info-value {
  display: flex;
  align-items: center;
  gap: 0.8rem;
  flex: 1 1 55%;
  font-weight: 500;
  font-size: 0.8rem;
  color: #34495e;
}

.edit-btn {
  background: transparent;
  border: none;
  color: #2980b9;
  cursor: pointer;
  padding: 0;
  transition: color 0.3s ease;
  display: flex;
  align-items: center;
}

.edit-btn:hover {
  color: #1c5980;
}

.edit-btn svg {
  display: block;
}
</style>






<div class="input-group mb-4">
    <input type="text" class="form-control" id="search-the-data-cfdi">
    <button class="btn btn-edit" onclick="open_my_pop('pop-data-facture')" type="button">Agregar</button>
</div>
{{>cfdi/formDataFacture}}






<div class="card-info-fiscal" id="card-info-fiscal">
  {{#each dataFacture}}
    <div class="info-row">
      <div class="info-value">
        <label>RFC del Cliente: {{rfc}}</label><br>
        <label>Nombre o Razón Social: {{company_name}}</label><br>
        <button
          class="btn btn-edit"
          onclick="use_data_for_the_facture(this)"
          data-id="{{id}}"
          data-rfc="{{rfc}}"
          data-company_name="{{company_name}}"
          data-use_cfdi="{{use_cfdi}}"
          data-fiscal_regime="{{fiscalRegime}}"
          data-postal_code="{{postal_code}}"
          data-street="{{street}}"
          data-num_i="{{num_i}}"
          data-num_e="{{num_e}}"
          data-cologne="{{cologne}}"
          data-municipy="{{municipy}}"
          data-state="{{state}}"
          data-country="{{country}}"
        >
          Usar
        </button>
      </div>
    </div>
  {{/each}}
</div>


<script>
  function use_data_for_the_facture(button) {
    const formData = {
      regimenFiscal: button.dataset.fiscal_regime || "",
      taxZipCode: button.dataset.postal_code || "",
      rfc: button.dataset.rfc || "",
      name: button.dataset.company_name || "",
      street: button.dataset.street || "",
      exterior: button.dataset.num_e || "",
      interior: button.dataset.num_i || "",
      neighborhood: button.dataset.cologne || "",
      municipality: button.dataset.municipy || "",
      state: button.dataset.state || "",
      country: button.dataset.country || ""
    };

    set_customer_facture_info(formData);
    close_my_pop('pop-data-facture');
    close_my_pop('pop-data-facture-list');
    close_my_pop('informationAddress');
    confirmationMessage('Listo','Los datos de la factura fueron actualizados con éxito');
  }
</script>
<script>
  let timeoutId;
  let lastSearchValue = "";
  const oldInforCfd=document.getElementById('card-info-fiscal').innerHTML;

  document.getElementById("search-the-data-cfdi").addEventListener("input", function () {
    const currentValue = this.value.trim();

    // Cancelamos el temporizador anterior
    clearTimeout(timeoutId);

    // Esperamos 500ms después de que el usuario deja de escribir
    timeoutId = setTimeout(() => {
      // Solo si el valor ha cambiado
      if (currentValue !== lastSearchValue) {
        lastSearchValue = currentValue;
        update_info(currentValue);
      }
    }, 500);
  });

  async function update_info(query) {
    //first we will see if exist a query 
    if(query==''){
      //if not exist we will show the fist information save from the backend 
      document.getElementById('card-info-fiscal').innerHTML=oldInforCfd;
      return;
    }


    //if exist a new search, we will send a message to the server for get the new data of the cfdi
    try {
      const id_customer=document.getElementById('id_customer').value;
      const answer = await send_data_to_server('/links/get-info-facture-cfdi', {query, id_customer},false);
      const container = document.getElementById('card-info-fiscal');

      //clear the container
      container.innerHTML = '';

      //we will see if get a answer from the server
      if (answer.success && Array.isArray(answer.data)) {
        answer.data.forEach(data => {
          const divRow = document.createElement('div');
          divRow.className = 'info-row';

          const divValue = document.createElement('div');
          divValue.className = 'info-value';

          const labelRfc = document.createElement('label');
          labelRfc.textContent = 'RFC del Cliente: ' + data.rfc;

          const br1 = document.createElement('br');

          const labelName = document.createElement('label');
          labelName.textContent = 'Nombre o Razón Social: ' + data.company_name;

          const br2 = document.createElement('br');

          const button = document.createElement('button');
          button.className = 'btn btn-edit';
          button.textContent = 'Usar';
          button.setAttribute('onclick', 'use_data_for_the_facture(this)');
          button.dataset.id = data.id;
          button.dataset.rfc = data.rfc;
          button.dataset.company_name = data.company_name;
          button.dataset.use_cfdi = data.use_cfdi;
          button.dataset.fiscal_regime = data.fiscalRegime;
          button.dataset.postal_code = data.postal_code;
          button.dataset.street = data.street;
          button.dataset.num_i = data.num_i;
          button.dataset.num_e = data.num_e;
          button.dataset.cologne = data.cologne;
          button.dataset.municipy = data.municipy;
          button.dataset.state = data.state;
          button.dataset.country = data.country;

          divValue.appendChild(labelRfc);
          divValue.appendChild(br1);
          divValue.appendChild(labelName);
          divValue.appendChild(br2);
          divValue.appendChild(button);

          divRow.appendChild(divValue);
          container.appendChild(divRow);
        });
      } else {
        container.innerHTML = '<p>No se encontraron resultados.</p>';
      }
    } catch (error) {
      console.error('Error al obtener los datos:', error);
    }
  }
</script>