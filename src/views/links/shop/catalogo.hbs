<style>
.container-products {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: center;
  padding-top: 1rem;
}

.product-card {
  width: 250px;
  border: 1px solid #ddd;
  border-radius: 12px;
  overflow: hidden;
  background-color: #f9f9f9;
  display: flex;
  flex-direction: column;
}

.product-card img {
  width: 100%;
  height: 180px;
  object-fit: cover;
}

.product-card-body {
  padding: 1rem;
}

.product-card h5 {
  margin: 0;
  font-size: 18px;
  font-weight: bold;
}

.product-card p {
  font-size: 14px;
  margin: 0.5rem 0;
}

.product-card .price {
  color: #2A8703;
  font-weight: bold;
  margin-bottom: 0.5rem;
}

.product-card .actions {
  display: flex;
  justify-content: space-between;
  margin-top: 1rem;
}

.catalog-controls {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

.nav-btn {
  background-color: var(--color-company);
  color: white;
  border: none;
  padding: 6px 14px;
  border-radius: 6px;
  cursor: pointer;
  transition: 0.3s;
}

.nav-btn:hover {
  background-color: var(--color-hover);
}
</style>
<br>
<input type="hidden" id="token" name="token" value="{{token}}">
<div class="container">
    <div class="card">
        <div class="card-body">
            <label for=""><i class="fi fi-sr-store-alt"></i> Catalogo de mi Tienda Online</label>
            <hr>
            <div class="row">
                <div class="col-10">
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3" placeholder="Escribe un codigo de barra o nombre">
                        <button class="btn btn-edit">Buscar</button>
                        
                    </div>
                </div>
                <div class="col-2">
                    {{#each branchFree}}
                    <button class="btn btn-confirm-message" onclick="nextWeb('/{{id_companies}}/{{id}}/add-products-shop')">Crear Producto Online</button>
                    {{/each}}
                </div>
            </div>
            <div class="container-products" id="productList">

            </div>
            <br><br>
            <div class="catalog-controls">
                <button id="prevPage" class="nav-btn" onclick="newPage(-1)">Anterior</button>
                <span id="pageNumber">Página 1</span>
                <button id="nextPage" class="nav-btn" onclick="newPage(1)">Siguiente</button>
            </div>
        </div>
    </div>
</div>
{{>loading}}









<script>


function renderProducts(products) {
  const container = document.getElementById('productList');
  container.innerHTML = '';

  products.forEach(prod => {
    const card = document.createElement('div');
    card.className = 'product-card';
    card.innerHTML = `
      <img src="${prod.img}" alt="${prod.name}">
      <div class="product-card-body">
        <h5>${prod.name}</h5>
        <p>${prod.description}</p>
        <div class="price">$${prod.price.toFixed(2)}</div>
        <small>Existencia: ${prod.exist}</small>
        <div class="actions">
          <button onclick="editProduct(${prod.id_producto})" class="btn btn-edit">Editar</button>
          <a href="/producto/${prod.id_producto}" target="_blank" class="btn btn-edit">Ver</a>
        </div>
      </div>
    `;
    container.appendChild(card);
  });
}




  const loadingOverlay = document.getElementById('loadingOverlay');
  const email = localStorage.getItem('user_email');
  const password = localStorage.getItem('user_password');
  const token = document.getElementById('token').value;
  let page=1;

  async function newPage(next){
    page+=next;
    if (page<1){
        page=1;
    }else{
        //this is for not call forever to the function, only when is need
        await load_the_menu_from_the_server()
    }
  }


  async function load_the_menu_from_the_server(){
    if (!email || !password || !token) {
      console.warn("Faltan credenciales para obtener los datos.");
      return;
    }

    loadingOverlay.style.display = 'flex';
    try {
      const response = await fetch('https://pluspuntodeventa.com/api/branch_online/get_catalogo.php', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ user_email: email, password, token, page: page })
      });

      const result = await response.json();
      if (result.success) {
        const data = result.data;
        renderProducts(data);

        // Actualizar número de página
        document.getElementById('pageNumber').textContent = `Página ${page}`;
      } else {
        console.warn("❌ No se pudieron obtener los datos: " + result.message);
      }
    } catch (error) {
      console.error("❌ Error al cargar los datos:", error);
    }

    loadingOverlay.style.display = 'none';
  }


  load_the_menu_from_the_server();
</script>