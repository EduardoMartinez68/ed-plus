<style>
    :root {
        --menu-services-primary: #1649FF;
    }

    .menu-services-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.4);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 999;
    }

    .menu-services-popup {
        position: relative;
        background: white;
        padding: 40px;
        border-radius: 16px;
        width: 90%;
        max-width: 600px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
        animation: menu-services-fadeIn 0.4s ease-in-out;
    }

    .menu-services-close-btn {
        position: absolute;
        top: 12px;
        right: 12px;
        font-size: 22px;
        color: #555;
        background: none;
        border: none;
        cursor: pointer;
        background-color: transparent;
        padding: 0.5rem;
        border-radius: 50%;
        transition: background-color 0.3s, transform 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .menu-services-close-btn:hover {
        background-color: #eee;
        transform: scale(1.1);
    }

    .menu-services-close-btn svg {
        width: 20px;
        height: 20px;
        stroke: #333;
        stroke-width: 2;
    }

    @keyframes menu-services-fadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .menu-services-options {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
    }

    .menu-services-btn-half {
        flex: 1;
        margin: 0 10px;
        padding: 16px;
        background: #f0f2ff;
        color: var(--color-company);
        border: 2px solid var(--color-company);
        border-radius: 12px;
        font-size: 18px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
    }

    .menu-services-btn-half:hover {
        background: rgba(22, 73, 255, 0.1);
    }

    .menu-services-cards-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 20px;
        gap: 20px;
    }

    .menu-services-card {
        width: 120px;
        padding: 15px;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 12px;
        text-align: center;
        cursor: pointer;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
        transition: transform 0.2s ease;
    }

    .menu-services-card:hover {
        transform: scale(1.05);
    }

    .menu-services-card img {
        width: 80px;
        height: 80px;
        object-fit: contain;
        margin-bottom: 10px;
    }

    .menu-services-formulario {
        margin-top: 30px;
        display: flex;
        flex-direction: column;
        gap: 20px;
        text-align: left;
    }

    .menu-services-formulario label {
        font-size: 15px;
        color: #444;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .menu-services-formulario input {
        width: 100%;
        padding: 12px 16px;
        font-size: 16px;
        background-color: #fafbfc;
        border: 1.5px solid #d1d5db;
        border-radius: 10px;
        transition: all 0.3s ease;
        color: #111827;
        font-family: 'Inter', sans-serif;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);
    }

    .menu-services-formulario input::placeholder {
        color: #9ca3af;
        opacity: 1;
    }

    .menu-services-formulario input:focus {
        border-color: var(--color-company, #3b82f6);
        box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
        outline: none;
        background-color: #fff;
    }

    .menu-services-recargas-rapidas {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
        margin-bottom: 20px;
    }

    .menu-services-recargas-rapidas button {
        padding: 12px 20px;
        font-size: 15px;
        background-color: #fff;
        color: var(--color-company, #3b82f6);
        border: 1.5px solid var(--color-company, #3b82f6);
        border-radius: 9999px;
        cursor: pointer;
        font-weight: 500;
        font-family: 'Inter', sans-serif;
        transition: all 0.25s ease;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
    }

    .menu-services-recargas-rapidas button:hover {
        background-color: var(--color-company, #3b82f6);
        color: #ffffff;
        box-shadow: 0 4px 10px rgba(59, 130, 246, 0.15);
    }

    .menu-services-btn-comprar {
        background: var(--color-company);
        color: white;
        border: none;
        padding: 14px 20px;
        font-size: 17px;
        border-radius: 12px;
        cursor: pointer;
        width: 100%;
        margin-top: 10px;
        transition: background 0.3s, transform 0.3s;
    }

    .menu-services-btn-comprar:hover {
        background: var(--color-hover);
        ;
        transform: scale(1.02);
    }

    .menu-services-open-popup-btn {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: var(--color-company);
        color: white;
        border: none;
        padding: 14px 20px;
        border-radius: 50px;
        font-size: 16px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        cursor: pointer;
        z-index: 998;
        transition: background 0.3s ease;
    }

    .menu-services-open-popup-btn:hover {
        background: var(--color-hover);
    }

    h2,
    h3 {
        text-align: center;
        color: #333;
    }

    #menu-services-contenido-dinamico {
        max-height: 70vh; /* Ajusta según lo que necesites */
        overflow-y: auto;
        padding-right: 10px; /* espacio para que el scroll no tape contenido */
    }

    /* Estiliza el scrollbar (opcional pero bonito) */
    #menu-services-contenido-dinamico::-webkit-scrollbar {
        width: 3px;
    }

    #menu-services-contenido-dinamico::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 5px;
    }

    #menu-services-contenido-dinamico::-webkit-scrollbar-thumb {
        background: rgba(0, 0, 0, 0.2);
        border-radius: 5px;
    }

    #menu-services-contenido-dinamico::-webkit-scrollbar-thumb:hover {
        background: rgba(0, 0, 0, 0.5);
    }
</style>


<!-- Primer Popup -->
<div class="menu-services-overlay" id="menu-services-popup-1" style="display: none;">
    <div class="menu-services-popup">
        <button class="menu-services-close-btn" onclick="cerrarPopups()" aria-label="Cerrar ventana">
            <svg viewBox="0 0 24 24" fill="none">
                <line x1="18" y1="6" x2="6" y2="18" />
                <line x1="6" y1="6" x2="18" y2="18" />
            </svg>
        </button>
        <h2>¿Qué deseas hacer?</h2>
        <div class="menu-services-options">
            <button class="menu-services-btn-half" onclick="seleccionarOpcion('recargas')">Pagar Recargas</button>
            <button class="menu-services-btn-half" onclick="seleccionarOpcion('servicios')">Pagar Servicios</button>
        </div>
    </div>
</div>

<!-- Segundo Popup (dinámico) -->
<div class="menu-services-overlay" id="menu-services-popup-2" style="display: none;">
    <div class="menu-services-popup">
        <button class="menu-services-close-btn" onclick="cerrarPopups()" aria-label="Cerrar ventana">
            <svg viewBox="0 0 24 24" fill="none">
                <line x1="18" y1="6" x2="6" y2="18" />
                <line x1="6" y1="6" x2="18" y2="18" />
            </svg>
        </button>
        <div id="menu-services-contenido-dinamico"></div>
    </div>
</div>



<script>
    let companyRechange=null;
    let myCreditForRechange=0;

    const menuServicesRecargas = [
        { name: "Telcel", icon: "https://yt3.googleusercontent.com/je7RNk1GeegHqDmmppc3HVbYIE9_Nh2pS64Mz6fkk-RcK29wbWujnx3HooDa0vqyu5tfXffxCA=s900-c-k-c0x00ffffff-no-rj" },
        { name: "Movistar", icon: "https://cdn2.downdetector.com/static/uploads/c/300/a2e0d/MovistarGreen_1.png" },
        { name: "AT&T", icon: "https://assets.weforum.org/organization/image/hRiZoy6qNMv7D-YblWFRXINkKb_3-9aj8xSMjID05kk.jpg" },
        { name: "Unefon", icon: "https://images.seeklogo.com/logo-png/19/1/unefon-logo-png_seeklogo-196154.png" },
        { name: "Bait", icon: "https://i.pinimg.com/474x/21/a7/ae/21a7ae2c609acfce2eb37c49a1454fe3.jpg" },
        { name: "PilloFon", icon: "https://play-lh.googleusercontent.com/R3sVEgTi689k0PL-04dF0S__4aN5d-9lxvv009E9IzU5yn4FD1fOC3LJhYa0mw6f3YM" },
        { name: "FreedomPop", icon: "https://cdn.mos.cms.futurecdn.net/v2/t:0,l:150,cw:1200,ch:900,q:80,w:1200/rWUsCDev7eDWzCZzPFCw2b.jpg" },
        { name: "Flash Mobile", icon: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9QJV3Dy47hVerM4Jz0sW07iPRsfY2Cc-jhw&s" },
        { name: "Diri", icon: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR49a8O6tby89KKg3A2fvlN-gbrAncjkUS59g&s" },
        { name: "Oui", icon: "https://play-lh.googleusercontent.com/40I0MAr1getFF-dLOzxekLi2_C3MC_u0HL2gmqNbXNWy32n9Bo3XIz2YYlAutfCT8aw" },
        { name: "Walmart Bodega Aurrera (Bait)", icon: "https://cdn.milenio.com/uploads/media/2020/06/17/walmart-lanza-bodega-aurrera-internet_0_2_702_436.jpg" },
        { name: "Maz Tiempo", icon: "https://mobileecosystemforum.com/wp-content/uploads/2016/02/maz-tiempo-logo.png" },
        { name: "Her Mobile", icon: "https://roams.mx/images/post/es_MX_telco/companias-telefonicas-hermobile.svg" },
        { name: "Wibo", icon: "https://startupchile.org/content/uploads/2021/09/wibo.jpg" },
        { name: "Aldi", icon: "https://cdn.worldvectorlogo.com/logos/aldi-nord-logo.svg" },
        { name: "Weex", icon: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQo0GEq4ZMnw5UNhF9_QicOFpWzIkrq7Tyndg&s" },
        { name: "Netwey", icon: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSxetOuvMWYzNFlyoIWIAlowmNtG_iD9gX-w&s" },
        { name: "Simplii", icon: "https://upload.wikimedia.org/wikipedia/commons/5/50/Simplii_Logo.png" }
    ];


    const menuServicesPago = [
        { name: "CFE", icon: "https://play-lh.googleusercontent.com/7UppiZcZTNBInAJzU-XG8EpGeU3BlLVJM9LoJTaWiVamvguplwUFMNUg_92lk-0z4g" },
        { name: "Telmex", icon: "https://play-lh.googleusercontent.com/lw3V8SWtYDFGLzomt2G_p_E6qUJhvuQHezp3bW-ewsQ0-cHPfimnLij6yP2gD_UCKfYj" },
        { name: "Sky", icon: "https://upload.wikimedia.org/wikipedia/commons/7/74/SKY_Basic_Logo.svg" },
        { name: "Dish", icon: "https://farmaciasroma.com/wp-content/uploads/2022/10/Pago-de-servicios-Dish-776x470.png" },
        { name: "Totalplay", icon: "https://tiendasneto.com.mx/media/wysiwyg/TotalPlay.png" },
        { name: "Izzi", icon: "https://play-lh.googleusercontent.com/TvS7cnMS_Qda0d0DQ6IsoM3KEZTiNqF_AiWBuG5x8k_027IlkGLy2T0SR-PzUQQZGg=w240-h480-rw" },
        { name: "Megacable", icon: "https://www.mtcenter.com.mx/wp-content/uploads/MEGACABLE.png" },
        { name: "VeTV", icon: "https://ruedadelafortuna.com.mx/wp-content/uploads/2010/04/vetv.png?w=584" },
        { name: "Agua y Drenaje", icon: "https://interapas.mx/wp-content/uploads/2019/09/LOGO-INTERAPAS-01.jpg" },
        { name: "Infonavit", icon: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQY7lqX1V4cVJgpZUKqrCC-SkQP6JNZeX9PTQ&s" },
        { name: "SAT / Impuestos", icon: "https://yt3.googleusercontent.com/V39NGHtva-UIWfaCPcQ5biRWyzNWmGv-VA4DFUYjTNa_GUAXKonqxBBLThcwyXFKT6CRDkelTA=s900-c-k-c0x00ffffff-no-rj" },
        { name: "Coppel Servicios", icon: "https://play-lh.googleusercontent.com/1m2FHx_SyuMy2qEGfs_8WL-eptgd18w8VXy0pMnJGNItIFk9voa9AumHmnyRxW0_q2QY" },
        { name: "Telnor", icon: "https://farmaciasroma.com/wp-content/uploads/2022/10/Pago-de-servicios-Telnor-776x470.png" }
    ];


    function openPopServices() {
        document.getElementById('menu-services-popup-1').style.display = 'flex';
        document.getElementById('menu-services-popup-2').style.display = 'none';
    }

    function cerrarPopups() {
        document.getElementById('menu-services-popup-1').style.display = 'none';
        document.getElementById('menu-services-popup-2').style.display = 'none';
    }

    function seleccionarOpcion(tipo) {
        document.getElementById('menu-services-popup-1').style.display = 'none';
        document.getElementById('menu-services-popup-2').style.display = 'flex';
        mostrarCategoria(tipo);
    }

    function mostrarCategoria(tipo) {
        const contenedor = document.getElementById('menu-services-contenido-dinamico');
        contenedor.innerHTML = '';

        let servicios = tipo === 'recargas' ? menuServicesRecargas : menuServicesPago;

        const cardsHTML = servicios.map(serv => `
        <div class="menu-services-card" onclick="${tipo === 'recargas' ? `mostrarFormularioRecarga('${serv.name}')` : ''}">
          <img src="${serv.icon}" alt="${serv.name}">
          <p>${serv.name}</p>
        </div>
      `).join('');

        contenedor.innerHTML = `<h3>Selecciona un servicio</h3><div class="menu-services-cards-container">${cardsHTML}</div>`;
    }

    function mostrarFormularioRecarga(company) {
        companyRechange=company;
        const contenedor = document.getElementById('menu-services-contenido-dinamico');
        contenedor.innerHTML = `
        <center><h6>Saldo disponible ${myCreditForRechange}$</h6></center>
        <h3>Recarga para ${company}</h3>
        <div class="menu-services-formulario">
          <div class="menu-services-recargas-rapidas">
            ${[10, 20, 30, 50, 100].map(monto => `
              <button onclick="document.getElementById('menu-services-recarga').value=${monto}">$${monto}</button>
            `).join('')}
          </div>
  
          <div>
            <label for="menu-services-telefono">Número de teléfono *</label>
            <input type="tel" id="menu-services-telefono-1" placeholder="Ej. 5544332211">
          </div>
  
          <div>
            <label for="menu-services-telefono-2">Confirmar número de teléfono *</label>
            <input type="tel" id="menu-services-telefono-2" placeholder="Ej. 5544332211">
          </div>
  
          <div>
            <label for="menu-services-recarga">Monto</label>
            <input type="number" id="menu-services-recarga" placeholder="Ej. 50">
          </div>
  
          <button class="menu-services-btn-comprar" onclick="comprarRecarga('${company}')">Comprar recarga</button>
        </div>
      `;
    }

    function validarTelefono(tel) {
        // Expresión regular para validar números de celular en México (10 dígitos)
        const regex = /^(\+?52|52)?(1)?(\d{10})$/;

        return regex.test(tel); // Retorna true si el teléfono es válido, de lo contrario, false
    }

    async function comprarRecarga(compañia) {
        const tel = document.getElementById('menu-services-telefono-1').value;
        const tel2 = document.getElementById('menu-services-telefono-2').value;
        const amount = document.getElementById('menu-services-recarga').value;

        //first we will see if the fields are empty
        if (!tel || !amount || !tel2) {
            warningMessage('¡Ey, esperaaa! 😅', 'Parece que olvidaste llenar todos los campos. ¡No te preocupes, solo falta un pasito más!');
            return;
        }

        //now we will see if the number is valid
        if (!validarTelefono(tel)) {
            warningMessage('¡Ey, esperaaa! 😅', 'Parece que el número de teléfono no es válido. Por favor verifica el número e intenta nuevamente.');
            return;
        }

        //now we will see if the number is equal
        if (tel !== tel2) {
            warningMessage('¡Ey, esperaaa! 😅', 'Los números de teléfono no coinciden. Por favor verifica e intenta nuevamente.');
            return;
        }


        //now will send a message to our API in the web
        const answerApi=await send_soliciutd_to_my_api(tel,amount,companyRechange);
        if(!answerApi.success){
            //if when send the message to the api and an error occurred, show the mssage of the API 
            warningMessage('¡Atención! ⚠️', answerApi.message);
            return;
        }

        const xange = 10; // Calculando el cambio


        cerrarPopups();
        if (xange > 0) {
            confirmationMessage('¡Compra exitosa! 🎉', `El cambio total es de $${xange}. ¡Gracias por tu compra!`);
        } else if (xange === 0) {
            confirmationMessage('¡Compra exitosa! 🎉', `Tu recarga de $${monto} para ${tel} con la compañía ${companyRechange} ha sido procesada. ¡Gracias por tu compra!`);
        } else {
            errorMessage('¡Atención! ⚠️', 'Parece que el pago es insuficiente. Por favor ingresa un monto mayor.');
        }
    }

    async function send_soliciutd_to_my_api(cellphone,amount,company){
        const loadingOverlay = document.getElementById("loadingOverlay");
        loadingOverlay.style.display = "flex";
        try {
            //get the infomration of the form
            const email = 'eduardoa4848@Outlook.es' //document.getElementById('email').value;

            //send a message to our api in the web for activate the token
            const response = await fetch("https://www.pluspuntodeventa.com/api/prontiPagos/rechange_prontipagos.php", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ email:email, cellphone: cellphone, amount: amount, company: company })
            });

            //get the anser of the server
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error:', error);
            return false;
        } finally {
            // Hide loading overlay regardless of success or failure
            loadingOverlay.style.display = "none";
        }
    }

    async function get_the_credit_of_the_server(){
        const loadingOverlay = document.getElementById("loadingOverlay");
        loadingOverlay.style.display = "flex";
        try {
            //get the infomration of the form
            const email = 'eduardoa4848@Outlook.es' //document.getElementById('email').value;

            //send a message to our api in the web for activate the token
            const response = await fetch("https://www.pluspuntodeventa.com/api/prontiPagos/get_my_credit.php", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ email:email})
            });

            //get the anser of the server
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error:', error);
            return false;
        }finally {
            // Hide loading overlay regardless of success or failure
            loadingOverlay.style.display = "none";
        }
    }

    async function update_credit_for_my_rechange(){
        const answerApi=await get_the_credit_of_the_server();
        if(answerApi.success){
            confirmationMessage('¡Yujuu! 🎉', answerApi.message);
        }else{
            errorMessage('¡Oops! 😵‍💫', answerApi.message);
        }

        myCreditForRechange=answerApi.credit;
    }

    async function get_only_my_credit(){
        try {
            //get the infomration of the form
            const email = 'eduardoa4848@Outlook.es' //document.getElementById('email').value;

            //send a message to our api in the web for activate the token
            const response = await fetch("https://www.pluspuntodeventa.com/api/prontiPagos/get_my_credit.php", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ email:email})
            });

            //get the anser of the server
            const data = await response.json();
            return data.credit;
        } catch (error) {
            console.error('Error:', error);
            return 0;
        }
    }
</script>