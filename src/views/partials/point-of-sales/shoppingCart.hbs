<style>
    .li-link:hover{
        background-color: var(--color-company);
    }
</style>
<div class="cart-point-of-sales">
    <div class="row">
        <div class="col">
            <label for="">Cliente: </label>
            <label id="emailClient" email="" idClient="null"></label>
        </div>
    </div>
    <!--this is for create the select of the printer and for create the select of the options--->
    <div class="row">
        <div class="col-6">
            <label for="">Impresora</label>
            <select name="" id="dataPrinter" class="form-select">
                <option value="">No imprimir Ticket</option>
                {{#each boxes}}
                    <option value="{{ip_printer}}">{{num_box}}</option>
                {{/each}}
            </select>
        </div>

        {{>point-of-sales/menuServices}}
        <div class="col-6">
            <label for=""></label>
            {{>point-of-sales/menuFunction}}
        </div>
    </div>
    <br>

    <!--this is the search of the menu--->
    <div class="search-container">
        <input type="text" class="search-input" placeholder="Escribe un cÃ³digo de barras..." id="search" autofocus
            name="usernameSearch">
        <i class="fi fi-br-search search-icon"></i>
    </div>
    <br>

    <!-- shopping cart -->
    <div class="cart-items-point-of-sales" id="cart-items" style="max-height: 50%;">

    </div>


    <div class="cart-total-point-of-sales">
        <h6>Total de productos: <span id="products-total">0</span></h6>
        <p>Total del Carrito: <span id="cart-total">0.00</span></p>
        <button class="btn-buy-point-of-sales" onclick="openPopSales()">Comprar (F12)</button>
    </div>
</div>


<script>
async function select_customer(idCompany) {
    const button = document.getElementById('emailClient');
    const emailClient = button.textContent;
    const client = await edit_client_car(emailClient); //we going to get the email of the customer 
    client.push(idCompany)

    var customerFound = false
    if (client != '') {
        loadingOverlay.style.display = "flex";
        const answer = await get_answer_server(client, '/fud/client');

        if (answer.idCustomer != null) {
            const idCustomer = answer.idCustomer
            const firstName = answer.firstName
            const lastName = answer.lastName
            const email = answer.email
            //update the name of the customer
            button.textContent = email;
            button.setAttribute('idClient', idCustomer);
            customerFound = true;
        } else {
            button.textContent = '';
            button.setAttribute('idClient', null);
        }
    } else {
        button.textContent = '';
        button.setAttribute('idClient', null);
    }
    loadingOverlay.style.display = "none";

    //show a message of that we not found to the customer
    if (!customerFound) {
        errorMessage('UPS ðŸ˜…', 'El cliente no fue encontrado. Por favor busque de nuevo');
    }
}

async function edit_client_car(email) {
    return new Promise((resolve, reject) => {
        Swal.fire({
            title: 'Selecciona al cliente para esta compra.',
            html:
                `
            <label>Escribe el email de el usuario</label>
            <input id="email" type="text" class="swal2-input" placeholder="Escribe el correo electrÃ³nico del cliente." value=${email}>
            `,
            focusConfirm: false,
            showCancelButton: true,
            confirmButtonText: 'search',
            confirmButtonColor: 'rgb(25, 135, 84)',
            cancelButtonColor: 'rgb(220, 53, 69)',
            preConfirm: () => {
                const emailInput = Swal.getPopup().querySelector('#email').value;
                const data = [emailInput];
                resolve(data);
            },
            allowOutsideClick: () => !Swal.isLoading()
        });
    });
}

</script>
<script>
document.addEventListener('keydown', function (event) {
    const id_branch = document.getElementById('id_branch_menu').value;
    const id_company = document.getElementById('id_company_menu').value;
    const id_user = document.getElementById('id_employee_menu').value;

    if (event.altKey) {
        switch (event.key.toLowerCase()) {
            case 'g':
                event.preventDefault();
                create_a_sale_in_wait();
                break;
            case 'w':
                event.preventDefault();
                show_popup_cart_in_wait();
                break;
            case 'b':
                event.preventDefault();
                select_customer(id_company);
                break;
            case 'm':
                event.preventDefault();
                cash_movement(id_user, id_branch);
                break;
            case 'i':
                event.preventDefault();
                show_popup_ticket_history();
                break;
            case 's':
                event.preventDefault();
                seleccionarOpcion('servicios')
                break;
            case 't':
                event.preventDefault();
                seleccionarOpcion('recargas')
                break;
            case 'q':
                event.preventDefault();
                show_message_pop('pop-returns')
                break;
        }
    }

    // Alt + Enter (cobrar)
    if ((event.altKey && event.key === 'Enter') || (event.key === 'F12')) {
        event.preventDefault();
        openPopSales();
    }
});

</script>