

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel='stylesheet'
    href='https://cdn-uicons.flaticon.com/2.6.0/uicons-regular-rounded/css/uicons-regular-rounded.css'>

  <div class="container my-5">
    <h2>Transporte de Mercancía</h2>
      {{#each dataServer}}
        <input type="text" value="{{token}}" id="dataServerToken" hidden>
    {{/each}}


  {{#each branchFree}}
    <div class="text my-3">
      <span class="traspaso-info">
        Desde <strong>{{name_branch}}</strong> hasta
        <strong>
          <select name="branch" id="branchSelect" class="branchSelect form-select" aria-label="Default select example">
            <option value="">Selecciona una sucursal</option>
          </select>
        </strong>
      </span>
      <button class="btn btn-primary update-branch" onclick="getMyNotifications()">Actualizar Sucursales</button>
    </div>
  {{/each}}


    {{>warehouses/tableSendTransport}}
    {{>warehouses/messagePop}}
  </div>

<script>
    const tokenServer = document.getElementById('dataServerToken').value; //her get the token of the software
    let listbranch = null;

    async function getMyNotifications() {
        //we will see if have the information of our branch save
        if (listbranch === null) {
            //if not have save the information of the branch, we will get the information from the database
            const answerApi = await get_answer_server({ token: tokenServer }, `https://pluspuntodeventa.com/app/api_transfer/get_all_the_branch.php`);

            //we will see if the server return most branch
            if (answerApi.success) {
                listbranch = answerApi.branches;
            } else {
                alert('Ocurrio un error al obtener sucursales');
                return;
            }
        }

        //create the select
        const select = document.getElementById('branchSelect');

        // Limpiamos por si acaso
        select.innerHTML = '';

        // Agregar opción por defecto
        const defaultOption = document.createElement('option');
        defaultOption.text = 'Selecciona una sucursal';
        defaultOption.disabled = true;
        defaultOption.selected = true;
        select.appendChild(defaultOption);

        //if exist data save, get show the information in the screen
        for (var i = 0; i < listbranch.length; i++) {
            const option = document.createElement('option');
            option.value = listbranch[i].token_id;
            option.text = listbranch[i].name;
            select.appendChild(option);
        }
    }

      async function get_answer_server(dataToTheServer, link) {
        try {
            const url = link;
            // Configurar la solicitud
            const options = {
                method: 'POST', // Puedes usar POST en lugar de GET si necesitas enviar muchos datos
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(dataToTheServer)
            };

            // Realizar la solicitud y esperar la respuesta
            const response = await fetch(url, options);

            if (!response.ok) {
                throw new Error('Error en la solicitud');
            }

            // Convertir la respuesta a JSON y devolverla
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error:', error);
            throw error;
        }
    }
</script>





<script>
  function toggleCompleto(checkbox) {

  }


  document.getElementById('busqueda').addEventListener('input', function () {
      /*
    const filtro = this.value.toLowerCase();
    const filas = document.querySelectorAll('.table tbody tr'); // Cambié aquí el selector

    filas.forEach(fila => {
      const codigo = fila.querySelector('.codigo-barras')?.textContent.toLowerCase() || '';
      fila.style.display = codigo.includes(filtro) ? '' : 'none';
    });
    */
  });


  function seleccionarTodos(masterCheckbox) {
    const checkboxes = document.querySelectorAll('.check-fila');
    checkboxes.forEach(cb => cb.checked = masterCheckbox.checked);
  }

  // Puedes usar esta función si más adelante quieres hacer una acción masiva
  function obtenerFilasSeleccionadas() {
    return Array.from(document.querySelectorAll('.check-fila:checked')).map(cb => cb.closest('tr'));
  }
</script>

<script>

    const listProducts = [
        {
            id: 1,
            image: 'https://panoli.mx/cdn/shop/products/00750105862010L.jpg?v=1618500354',
            name: 'Producto 1',
            code: '1234567890',
            requested: 0,
            amountToSend: 0,
            stock: 10,
            salePrice: 10,
            total: 10,
        },
        {
            id: 2,
            image: 'https://panoli.mx/cdn/shop/products/00750105862010L.jpg?v=1618500354',
            name: 'Producto 2',
            code: '8783682456',
            requested: 0,
            amountToSend: 0,
            stock: 10,
            salePrice: 10,
            total: 10,
        }
    ];

    function openPopRequest(barcode) {
        document.getElementById('pop-request-overlay').style.display = 'flex';
        const producto = listProducts.find(product => product.code === barcode); //search the product by barcode

        //now we will see if exist this product in the list
        if (!producto) {
            console.error('Producto no encontrado');
            return;
        }

        //her we will update the data of the message pop with the data of the product selected
        document.getElementById('pop-request-img').src = producto.image;
        document.getElementById('pop-request-name').textContent = producto.name;
        document.getElementById('pop-request-code').textContent = producto.code;
        document.getElementById('pop-request-stock').textContent = producto.stock;
    }

    function closePopRequest() {
        document.getElementById('pop-request-overlay').style.display = 'none';
    }

    function adjustQty(amount) {
        const input = document.getElementById('pop-request-qty');
        let value = parseInt(input.value) || 0;
        value += amount;
        if (value < 0) value = 0;
        input.value = value;
    }

    function renderizarTablaCompleta() {
        const tbody = document.getElementById('tabla');
        tbody.innerHTML = ''; // Limpiar tabla

        listProducts.forEach((product, index) => {
            const tr = document.createElement('tr');
            tr.setAttribute('data-index', index); // Lo usamos luego para editar

            tr.innerHTML = `
            <td>
                <input type="checkbox" class="check-fila">
            </td>
            <td class="information-product">
                <img src="${product.image}" alt="" class="product-table-img">
                <div class="product-text">
                    <label>${product.code}</label><br>
                    <span>${product.name}</span>
                </div>
            </td>
            <td>${product.requested} pz</td>
            <td>${product.stock} pz</td>
            <td>
                <div class="input-group">
                    <button onclick="openPopRequest('${product.code}')" class="form-control text-center">${product.amountToSend}</button>
                </div>
            </td>
            <td>${product.salePrice}</td>
            <td>${product.total}</td>
            </tr>
        `;

            tbody.appendChild(tr);
        });
    }

    
    renderizarTablaCompleta();


    function actualizarFilaPorCantidad(code, nuevaCantidad) {
        // Buscar el producto por su código
        const index = listProducts.findIndex(p => p.code === code);
        if (index === -1) return;

        // Actualizar los valores en el array
        listProducts[index].amountToSend = nuevaCantidad;
        listProducts[index].total = nuevaCantidad * listProducts[index].salePrice;

        // Actualizar la fila en la tabla (sin volver a renderizar todo)
        const tbody = document.getElementById('tabla');
        const filas = tbody.querySelectorAll('tr');

        for (let fila of filas) {
            const filaIndex = parseInt(fila.getAttribute('data-index'));
            if (filaIndex === index) {
                const btnCantidad = fila.querySelector('button');
                const tdTotal = fila.querySelectorAll('td')[6]; // Última celda

                btnCantidad.textContent = nuevaCantidad;
                tdTotal.textContent = listProducts[index].total;
                break;
            }
        }
    }




    
</script>