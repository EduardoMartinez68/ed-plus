<link rel="stylesheet" href="/css/manager/supplies_products.css">
<br>
<br>
<div class="container">
    <label><i class="fi-icon fi-sr-box-alt"></i> Productos</label>
    <hr>
    <div class="row mt-5">
        <div class="col-md-12">
            {{#each branch}}
            <button class="btn btn-danger" onclick="nextWeb('/{{id_companies}}/{{id}}/combo-refresh')"><i
                    class="fi-department fi-br-refresh"></i></button> Recargar todos los combos de la empresa
            {{/each}}
        </div>
    </div>
</div>

<div class="container">
    {{#each branchFree}}
    <input type="hidden" id="id_branch" value="{{id}}">
    <div class="row">
        <div class="col-6">
            <input type="text" class="form-control" placeholder="Buscar código de barras..." id="search">
        </div>
        <div class="col">
            <div class="col">
                <button class="btn btn-confirm-message"
                    onclick="nextWeb('{{id_companies}}/{{id}}/add-products-free')">Agregar producto +</button>
            </div>
        </div>
        <div class="col">
            <button class="btn btn-edit" onclick="nextWeb('{{id_companies}}/{{id}}/upload-products')"><i
                    class="fi-icon fi-br-upload"></i> Subir productos</button>
        </div>
    </div>
    {{/each}}
</div>

<br>
<div class="container">
    <div style="height: 700px; overflow-y: scroll;">
        <table class="table table-hover" id="table-container"> <!--table-bordered-->
            <colgroup>
                <col style="width: 10%;">
                <col style="width: 10%;">
                <col style="width: 15%;">
                <col style="width: 30%;">
                <col style="width: 10%;">
                <col style="width: 10%;">
                <col style="width: 15%;">
                <col style="width: 7%;">
            </colgroup>
            <thead>
                <tr>
                    <th></th>
                    <th>Barcode</th>
                    <th>Nombre</th>
                    <th>Descripcion</th>
                    <th>Departamento/Categoría</th>
                    <th>Precio</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                {{#each combos}}
                <tr id="{{barcode}}">
                    {{#if img}}
                    <td><img src="{{img}}" class="img-s-p"></td>
                    {{else}}
                    <td><img src="/img/icons_first/product.webp" class="img-s-p"></td>
                    {{/if}}

                    <td>{{barcode}}</td>
                    <td>{{name}}</td>
                    <td>{{description}}</td>
                    <td>{{department_name}}/{{category_name}}</td>
                    <td>{{price_1}}</td>
                    <td>
                        <button class="btn btn-edit" id="{{id}}"
                            onclick="nextWeb('{{id_companies}}/{{id_branches}}/{{id}}/edit-products-free')"><i
                                class="fi-department fi-sr-pencil"></i></button>
                    </td>
                    <td>
                        <button class="btn btn-edit" id="{{id}}"
                            onclick="openLabelModal('{{name}}','{{barcode}}','{{price_1}}')"><i
                                class="fi-department fi-sr-label"></i></button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>
<br><br>




<!-- Modal para seleccionar etiqueta -->
<style>
    .label-modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .label-modal-content {
        background: #fff;
        border-radius: 10px;
        padding: 30px;
        width: 600px;
        max-height: 80vh;
        overflow-y: auto;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
    }

    .labels-grid-modal {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 10px;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .label-card-modal {
        border: 1px solid #ddd;
        border-radius: 6px;
        padding: 10px;
        background: #f9f9f9;
        cursor: pointer;
        transition: 0.2s;
    }

    .label-card-modal:hover {
        background: #eaeaea;
        transform: scale(1.02);
    }

    .label-card-modal.selected {
        border: 2px solid #007bff;
        background: #eef6ff;
    }

    .label-modal-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
        flex-wrap: wrap;
        gap: 10px;
    }

    .btn-cancel {
        background-color: #ccc;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }
</style>
<div id="labelModal" class="label-modal">
    <div class="label-modal-content">
        <h2>Selecciona una etiqueta</h2>
        <input type="text" id="search-labels" placeholder="Buscar etiqueta..." oninput="filterLabelModal()">

        <div id="modalLabelsGrid" class="labels-grid-modal">
            {{#each labels}}
            <div class="label-card-modal" onclick="selectLabelModal({{id}}, '{{name}}')">
                <h4>{{name}}</h4>
                <p>{{width}} x {{length}} mm</p>
            </div>
            {{/each}}
        </div>

        <div class="label-modal-actions">
            {{#each branchFree}}
            <button class="btn btn-confirm-message" onclick="nextWeb('/{{id_companies}}/{{id}}/add-labels')">Agregar nueva
                etiqueta</button>
            {{/each}}
            <div>
                <button class="btn btn-danger" onclick="closeLabelModal()">Cancelar</button>
                <button class="btn btn-edit" onclick="confirmLabelSelection()">Usar esta etiqueta</button>
            </div>
        </div>
    </div>
</div>
<script>
    let selectedLabelId = null;
    let selectedLabelName = "";
    let productForPrint = null;

    function openLabelModal(name, barcode,price) {
        selectedLabelId = null;
        selectedLabelName = "";
        productForPrint = {
            name, 
            barcode,
            price
        };


        document.getElementById("labelModal").style.display = "flex";

        // Limpiar selección previa
        document.querySelectorAll('.label-card-modal').forEach(el => el.classList.remove('selected'));
    }

    function closeLabelModal() {
        document.getElementById("labelModal").style.display = "none";
    }

    function selectLabelModal(id, name) {
        selectedLabelId = id;
        selectedLabelName = name;
        document.querySelectorAll('.label-card-modal').forEach(el => el.classList.remove('selected'));
        const el = document.querySelector(`#labelModal .label-card-modal[onclick*="${id}"]`);
        if (el) el.classList.add('selected');
    }

    function filterLabelModal() {
        const value = document.getElementById('search-labels').value.toLowerCase();
        document.querySelectorAll('#modalLabelsGrid .label-card-modal').forEach(el => {
            const title = el.querySelector('h4').textContent.toLowerCase();
            el.style.display = title.includes(value) ? "block" : "none";
        });
    }

    function confirmLabelSelection() {
        if (!selectedLabelId) {
            alert("Por favor selecciona una etiqueta.");
            return;
        }

        const encodedName = encodeURIComponent(productForPrint.name);
        const encodedBarcode = encodeURIComponent(productForPrint.barcode);
        const encodedPrice = encodeURIComponent(productForPrint.price);

        const url = `/links/view_label/${selectedLabelId}/name=${encodedName}/barcode=${encodedBarcode}/price=${encodedPrice}`;
        window.open(url, '_blank');
        closeLabelModal();
    }

</script>













<script>
    async function delate_combo(id, id_company) {
        if (await questionMessage('Eliminar Combo', '¿Quieres eliminar este combo?')) {
            window.location.href = "/fud/" + id_company + "/" + id + "/delate-combo-company";
        }
    }

    function edit_supplies(id, id_company) {
        window.location.href = "/fud/" + id_company + "/" + id + "/edit-combo-company";
    }

    function print_label(name, barcode, price) {
        // Codificar los valores para que no haya problemas con espacios o caracteres especiales
        const encodedName = encodeURIComponent(name);
        const encodedBarcode = encodeURIComponent(barcode);
        const encodedPrice = encodeURIComponent(price);
        const url = `/links/view_label/5/name=${encodedName}/barcode=${encodedBarcode}/price=${encodedPrice}`;
        window.open(url, '_blank');
    }
</script>
<!---
<script src="/js/search.js"></script>
-->
<script>
    let is_a_product = true; // Cambia a false si quieres buscar combos



    document.getElementById('search').addEventListener('input', search_combo);

    let searchTimeout = null;

    function search_combo() {
        const barcodeValue = document.getElementById('search').value;

        // Para no hacer llamadas por cada letra que escriba (esperamos 300ms)
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            fetchCombos(barcodeValue);
        }, 200);
    }

    async function fetchCombos(barcode) {
        const id_branch = document.getElementById('id_branch').value;
        try {
            const response = await fetch(`/links/update_table/${id_branch}/combos`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                credentials: 'include', // Importante para sesión
                body: JSON.stringify({ barcode, is_a_product })
            });

            if (!response.ok) {
                const text = await response.text();
                console.error('Server responded with error page:', text);
                throw new Error(`Server error ${response.status}`);
            }

            const data = await response.json();
            renderTable(data);
        } catch (error) {
            console.error('Error fetching combos:', error);
        }
    }

    function renderTable(combos) {
        const tbody = document.querySelector('#table-container tbody');
        tbody.innerHTML = '';

        combos.forEach(combo => {
            const row = document.createElement('tr');
            row.id = combo.barcode;

            const imgSrc = combo.img ? combo.img : '/img/icons_first/product.webp';

            row.innerHTML = `
                <td><img src="${imgSrc}" class="img-s-p"></td>
                <td>${combo.barcode}</td>
                <td>${combo.name}</td>
                <td>${combo.description}</td>
                <td>${combo.department_name}/${combo.category_name}</td>
                <td>${combo.price_1}</td>
                <td>
                    <button class="btn btn-edit" id="${combo.id}" onclick="nextWeb('${combo.id_companies}/${combo.id_branches}/${combo.id}/edit-products-free')">
                        <i class="fi-department fi-sr-pencil"></i>
                    </button>
                </td>
            `;

            tbody.appendChild(row);
        });
    }
</script>